2007-04-18  Alex Graveley  <alex@beatniksoftware.com>

	* compzilla/src/nsKeycodes.h: New file, copied nsKeycodes and
	nsSunKeycodes DOM<->GDK keysym tables from
	mozilla/widget/src/gtk/nsGtkEventHandler.cpp.

	* compzilla/src/compzillaWindow.cpp (DOMKeyCodeToKeySym): New,
	converts a DOM keyCode to a GDK keysym.
	(SendKeyEvent): Use DOMKeyCodeToKeySym and XKeysymToKeycode to get
	the proper X keycode to forward to the native window.

	* compzilla/src/compzillaControl.cpp (Filter): We're the only ones
	who should process DAMAGE events, so remove them.

	Also change DEBUG -> SPEW, to avoid conflicting with the define
	used by nsDebug.h.
	
2007-04-18  Alex Graveley  <alex@beatniksoftware.com>

	* compzilla/src/compzillaWindow.cpp (HandleEvent): Initial
	FocusIn/Out, DOMMouseScroll, and KeyPress/Release support.

	* compzilla/src/compzillaControl.cpp (InitOutputWindow): Call
	XSetInputFocus for the Moz window.

	* compzilla/components/compzillaWindowManager.js: Set
	content.tabIndex=1 so the canvas elements are focusable.

2007-04-15  Alex Graveley  <alex@beatniksoftware.com>

	* compzilla/src/compzillaControl.cpp (InitWindowState): If we're
	the window manager, add all existing windows.  Init Shape
	extension.  Remove DEMO_HACK.
	(WindowDamaged): Move XDamageNotify handler to here.

2007-04-14  Chris Toshok  <toshok@ximian.com>

	* compzilla/src/compzillaRenderingContext.cpp (Redraw): fix the
	non-1.8 branch case for scaling the rectangle.

2007-04-13  Alex Graveley  <alex@beatniksoftware.com>

	* compzilla/src/compzillaRenderingContext.cpp (Redraw): Convert
	damaged rect to Twips, using the nsPresContext.

	* compzilla/src/compzillaWindow.cpp (compzillaWindow): Use manual
	redirection, and XDamageReportRawRectangles.

2007-04-12  Chris Toshok  <toshok@ximian.com>

	* compzilla/components/compzillaWindowManager.js
	(HookupChromeEvents): make the mousedown handler a capture phase
	event handler, so we can raise the window if we mouse down
	anywhere on it, and still have it end up going to the native
	window.

2007-04-12  Chris Toshok  <toshok@ximian.com>

	* compzilla/src/compzillaControl.cpp: use the new hotness.

	* compzilla/src/compzillaRenderingContext.h: new improved api.

	* compzilla/src/compzillaRenderingContext.cpp: rework this so we
	don't copy twice, we only ever blit anything in ::Render.

2007-04-12  Alex Graveley  <alex@beatniksoftware.com>

	* compzilla/src/compzillaRenderingContext.cpp: Drop non-thebes,
	non-render fallback code and remove mImageSurfaceData.
	(CopyImageDataFrom): For non-thebes, avoid XGetImage and call
	cairo_xlib_surface_create for the drawable to avoid copying data.

	* compzilla/src/compzillaControl.cpp (Filter): Pass window's
	visual to CopyImageDataFrom.

2007-04-11  Alex Graveley  <alex@beatniksoftware.com>

	* compzilla/src/compzillaWindow.cpp (SendMouseEvent): Make mouse
	event sending sorta work.  Use new GetSubwindowAtPoint to get
	destination subwindow, and fake enter/leave events when the
	subwindow changes.

2007-04-11  Chris Toshok  <toshok@ximian.com>

	* compzilla/chrome/skin/compzilla.css: add the overlay div's
	style.

	* compzilla/chrome/skin/desktop.html: add the overlay div here so
	people can add their widgets.

	* compzilla/src/compzillaRenderingContext.cpp (CopyImageDataFrom):
	fix a copy of glaring memory leaks.  we seem okay with memory now.

2007-04-10  Alex Graveley  <alex@beatniksoftware.com>

	* compzilla/src/compzillaControl.cpp (Filter): Call XSetInputFocus
	on MapRequest.

	* compzilla/src/compzillaWindow.cpp (HandleEvent): Send
	MotionNotify events if DOM eventtype is "mousemove".
	(SendMouseEvent): Set ButtonMotionMask correctly.

2007-04-10  Chris Toshok  <toshok@ximian.com>

	* compzilla/components/compzillaWindowManager.js: add an EWMH
	inspired layered window stack.

	* compzilla/chrome/skin/desktop.html: add an html tag, just cuz.

	* compzilla/chrome/skin/compzilla.css: add overflow: hidden to the
	html element, so we never see scrollbars on our desktop.

2007-04-10  Chris Toshok  <toshok@ximian.com>

	* compzilla/components/compzillaWindowManager.js: fairly big
	changes.  Clean up some errors that were screwing up
	sizing/scaling of override windows.  Also, add code to remove the
	wm chrome, and make it so you can call
	CreateWMChrome/DestroyWMChrome multiple times on the same window,
	which can happen when the _NET_WM_WINDOW_TYPE property is set on a
	window.  Add support for this property, so we now get a borderless
	panel (which isn't override_redirect, but is decorationless.)

	* compzilla/public/compzillaIControl.idl: add InternAtom and
	GetAtomProperty, and change signature for GetStringProperty.

	* compzilla/src/compzillaWindow.cpp: fix build on minefield.

	* compzilla/public/compzillaIWindowManager.idl: add x/y/w/h args
	to WindowCreated, and change PropertyChanged to take the atom
	instead of the string name.

	* compzilla/src/compzillaControl.cpp (InternAtom): new method,
	callable from JS.
	(GetStringProperty): we pass the atom, not the property name.
	(GetAtomProperty): new method, returns the atom value of a
	property.
	(InitManagerWindow): create the offscreen window and grab the
	window manager + compositor selections.  we aren't graceful about
	replacing an existing wm here.
	(AddWindow): add the x/y/width/height to the WindowCreated method
	call, so we can create the chrome of the right size.
	(PropertyChanged): pass the atom now, not the name.

	* compzilla/src/compzillaControl.h: change signature for
	PropertyChanged, and add manager window foo.

2007-04-10  Alex Graveley  <alex@beatniksoftware.com>

	* compzilla/src/compzillaWindow.cpp (SendMouseEvent): Adjust
	button+1, since DOM event buttons start at 0;
	(TranslateClientXYToWindow): New.  Adjusts a client x/y for the
	canvas frame's screen offset.  This seems to make button events
	work in the Metacity case, but focus stealing is preventing it
	in the standalone case.

	* compzilla/src/compzillaControl.cpp: Add commented out XEVIE
	stuff.  
	(Filter): Handle MapRequest and ConfigureRequest by just calling
	XMapRaised and XMoveResizeWindow respectively; eventually this
	should call the JS and allow for stopping/mutating the event.
	(InitWindowState): XSelectInput on the root win for
	SubstructureRedirectMask, and if errors occur (i.e. a WM is
	running), try again without it.

	* compzilla/src/compzillaControl.h: Keep an XError count, and add
	ClearError which returns the last count.  This is used to detect
	an existing WM.

	* compzilla/src/compzillaWindow.cpp: New.  Replaces
	CompositingWindow with an nsIDOMEventHandler subclass.

	* compzilla/src/compzillaModule.cpp: Use
	NS_GENERIC_FACTORY_CONSTRUCTOR(compzillaRenderingContext).

	* compzilla/src/compzillaRenderingContext.cpp: Drop
	CZ_NewRenderingContext.  Fix some whitespace.

