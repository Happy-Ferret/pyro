2007-04-21  Chris Toshok  <toshok@ximian.com>

	* compzilla/chrome/skin/compzilla.css: debug style changes (since
	we now have debugContent and debugLog).  Also, add the
	override_content class style.

	* compzilla/components/compzillaWindowManager.js: comment out some
	of the debug spew that was causing some operations to slow wayyy
	down.

	deal with the override_redirect window styling in a more css
	compliant way by setting override redirect content's CSS class to
	"override_content" instead of "content".  Move the opacity
	assignment to the stylesheet.

	Fix the weird windows showing up at startup (and when you opened
	certain applications like gedit or gnome-terminal.).  Turns out
	that we have to set the visibility on both the canvas and the wm
	frame to "hidden" for unmapped windows, or else the contents is
	displayed.  we were just hidding the wm frame.  firefox bug?

	factor out the creation of the debug window, and add a "Clear"
	button, which is horribly placed to be mostly obscured by the
	debug log.  Not sure why, but clicking on the part that *is*
	visible clears the log.

2007-04-20  Chris Toshok  <toshok@ximian.com>

	* compzilla/src/compzillaControl.cpp (SendConfigureNotify): spew
	out the configure info.
	(Filter): print out the border_width of the request here too.

	* compzilla/components/compzillaWindowManager.js:
	(WindowConfigured): remove the addition to width/height here.
	With it, gnome-terminal goes into an infinite loop requesting a
	new size, growing all the time.  heh.

2007-04-20  Chris Toshok  <toshok@ximian.com>

	* compzilla/components/compzillaWindowManager.js (WindowCreated):
	try to make sure the window is placed on screen, and deal with
	windows which are already mapped when we find out about them.
	(WindowConfigured): for the time being this is only ever called
	from the ConfigureRequest handler, so we don't need to worry about
	all the variety of cases metacity deals with in its horribly
	overloaded window resize code.  Also, at the moment we honor all
	requests, regardless of screen/window size.  So you can move
	windows completely off the screen, resize them larger than the
	screen, etc.  Since we're not changing the configure information,
	we follow the ICCCM and send a synthetic ConfigureNotify back to
	the client.
	(DocumentMouseMove): since so many resize handles result in both
	the window moving and resizing, make 1 call that does both (so we
	can make 1 XConfigureWindow call in the native code instead of 2.)
	(CreateWMChrome): clean this up a touch.  we don't need to both
	removeChild/appendChild to reparent a dom element, appendChild
	does both.
	(MoveElementTo): send a real ConfigureNotify event.
	(ResizeElementTo): same.
	(ResizeElementBy): call MoveAndResizeElementBy with 0,0 for dx,dy.
	(MoveElementBy): call MoveAndResizeElementBy with 0,0 for dw,dh.
	(MoveAndResizeElementBy): both move and resize the element, and
	generate 1 ConfigureNotify.

	* compzilla/public/compzillaIWindowManager.idl: add a boolean
	"mapped" arg to WindowCreated, so we can reflect the current state
	of a window previously mapped (really only useful when adding
	windows that were already created when we start up.)

	* compzilla/src/compzillaControl.cpp: globally reindent the SPEW
	lines.  Also, spew out the extension information as we query it.
	(SendConfigureNotify): new interface implementation.  Send a
	synthetic ConfigureNotify event.
	(ConfigureWindow): new interface implementation.  Send a real
	ConfigureNotify event.
	(ShowOutputWindow): make our region the same size as the display.
	(AddWindow): pass in a boolean telling the window manager if the
	window is already mapped.
	(Filter): we now do the WindowConfigured stuff in the
	ConfigureRequest case, and ignore ConfigureNotify events.

	* compzilla/public/compzillaIControl.idl: add two methods, one for
	sending a synthetic ConfigureNotify (SendSyntheticNotify) and one
	for actually configuring the window (ConfigureWindow).

	* compzilla/chrome/skin/compzilla.css: remove the explicit
	width/height from the .window class, and also make the debug spew
	smaller.

	* compzilla/src/compzillaWindow.cpp: add WITH_SPEW handling so we
	can turn off the spew.

	* compzilla/src/compzillaRenderingContext.cpp: add WITH_SPEW
	handling so we can turn off the spew.

	* compzilla/Makefile.am (libcompzilla_la_CPPFLAGS): add
	-DWITH_SPEW.

2007-04-19  Alex Graveley  <alex@beatniksoftware.com>

	* compzilla/src/compzillaWindow.cpp (EnsurePixmap): Don't call
	XDamageCreate until here, since it'll fail if we aren't mapped yet.

	* compzilla/src/compzillaControl.cpp (ErrorHandler): Print error
	info to the console.  This is mostly ripped from compiz.  Make the
	X extension event and error results static so we can access them
	from here.

2007-04-19  Chris Toshok  <toshok@ximian.com>

	* compzilla/chrome/content/start.js: resize the desktopWindow
	element to the size of the screen.

2007-04-18  Alex Graveley  <alex@beatniksoftware.com>

	* compzilla/src/nsKeycodes.h: New file, copied nsKeycodes and
	nsSunKeycodes DOM<->GDK keysym tables from
	mozilla/widget/src/gtk/nsGtkEventHandler.cpp.

	* compzilla/src/compzillaWindow.cpp (DOMKeyCodeToKeySym): New,
	converts a DOM keyCode to a GDK keysym.
	(SendKeyEvent): Use DOMKeyCodeToKeySym and XKeysymToKeycode to get
	the proper X keycode to forward to the native window.

	* compzilla/src/compzillaControl.cpp (Filter): We're the only ones
	who should process DAMAGE events, so remove them.

	Also change DEBUG -> SPEW, to avoid conflicting with the define
	used by nsDebug.h.
	
2007-04-18  Alex Graveley  <alex@beatniksoftware.com>

	* compzilla/src/compzillaWindow.cpp (HandleEvent): Initial
	FocusIn/Out, DOMMouseScroll, and KeyPress/Release support.

	* compzilla/src/compzillaControl.cpp (InitOutputWindow): Call
	XSetInputFocus for the Moz window.

	* compzilla/components/compzillaWindowManager.js: Set
	content.tabIndex=1 so the canvas elements are focusable.

2007-04-15  Alex Graveley  <alex@beatniksoftware.com>

	* compzilla/src/compzillaControl.cpp (InitWindowState): If we're
	the window manager, add all existing windows.  Init Shape
	extension.  Remove DEMO_HACK.
	(WindowDamaged): Move XDamageNotify handler to here.

2007-04-14  Chris Toshok  <toshok@ximian.com>

	* compzilla/src/compzillaRenderingContext.cpp (Redraw): fix the
	non-1.8 branch case for scaling the rectangle.

2007-04-13  Alex Graveley  <alex@beatniksoftware.com>

	* compzilla/src/compzillaRenderingContext.cpp (Redraw): Convert
	damaged rect to Twips, using the nsPresContext.

	* compzilla/src/compzillaWindow.cpp (compzillaWindow): Use manual
	redirection, and XDamageReportRawRectangles.

2007-04-12  Chris Toshok  <toshok@ximian.com>

	* compzilla/components/compzillaWindowManager.js
	(HookupChromeEvents): make the mousedown handler a capture phase
	event handler, so we can raise the window if we mouse down
	anywhere on it, and still have it end up going to the native
	window.

2007-04-12  Chris Toshok  <toshok@ximian.com>

	* compzilla/src/compzillaControl.cpp: use the new hotness.

	* compzilla/src/compzillaRenderingContext.h: new improved api.

	* compzilla/src/compzillaRenderingContext.cpp: rework this so we
	don't copy twice, we only ever blit anything in ::Render.

2007-04-12  Alex Graveley  <alex@beatniksoftware.com>

	* compzilla/src/compzillaRenderingContext.cpp: Drop non-thebes,
	non-render fallback code and remove mImageSurfaceData.
	(CopyImageDataFrom): For non-thebes, avoid XGetImage and call
	cairo_xlib_surface_create for the drawable to avoid copying data.

	* compzilla/src/compzillaControl.cpp (Filter): Pass window's
	visual to CopyImageDataFrom.

2007-04-11  Alex Graveley  <alex@beatniksoftware.com>

	* compzilla/src/compzillaWindow.cpp (SendMouseEvent): Make mouse
	event sending sorta work.  Use new GetSubwindowAtPoint to get
	destination subwindow, and fake enter/leave events when the
	subwindow changes.

2007-04-11  Chris Toshok  <toshok@ximian.com>

	* compzilla/chrome/skin/compzilla.css: add the overlay div's
	style.

	* compzilla/chrome/skin/desktop.html: add the overlay div here so
	people can add their widgets.

	* compzilla/src/compzillaRenderingContext.cpp (CopyImageDataFrom):
	fix a copy of glaring memory leaks.  we seem okay with memory now.

2007-04-10  Alex Graveley  <alex@beatniksoftware.com>

	* compzilla/src/compzillaControl.cpp (Filter): Call XSetInputFocus
	on MapRequest.

	* compzilla/src/compzillaWindow.cpp (HandleEvent): Send
	MotionNotify events if DOM eventtype is "mousemove".
	(SendMouseEvent): Set ButtonMotionMask correctly.

2007-04-10  Chris Toshok  <toshok@ximian.com>

	* compzilla/components/compzillaWindowManager.js: add an EWMH
	inspired layered window stack.

	* compzilla/chrome/skin/desktop.html: add an html tag, just cuz.

	* compzilla/chrome/skin/compzilla.css: add overflow: hidden to the
	html element, so we never see scrollbars on our desktop.

2007-04-10  Chris Toshok  <toshok@ximian.com>

	* compzilla/components/compzillaWindowManager.js: fairly big
	changes.  Clean up some errors that were screwing up
	sizing/scaling of override windows.  Also, add code to remove the
	wm chrome, and make it so you can call
	CreateWMChrome/DestroyWMChrome multiple times on the same window,
	which can happen when the _NET_WM_WINDOW_TYPE property is set on a
	window.  Add support for this property, so we now get a borderless
	panel (which isn't override_redirect, but is decorationless.)

	* compzilla/public/compzillaIControl.idl: add InternAtom and
	GetAtomProperty, and change signature for GetStringProperty.

	* compzilla/src/compzillaWindow.cpp: fix build on minefield.

	* compzilla/public/compzillaIWindowManager.idl: add x/y/w/h args
	to WindowCreated, and change PropertyChanged to take the atom
	instead of the string name.

	* compzilla/src/compzillaControl.cpp (InternAtom): new method,
	callable from JS.
	(GetStringProperty): we pass the atom, not the property name.
	(GetAtomProperty): new method, returns the atom value of a
	property.
	(InitManagerWindow): create the offscreen window and grab the
	window manager + compositor selections.  we aren't graceful about
	replacing an existing wm here.
	(AddWindow): add the x/y/width/height to the WindowCreated method
	call, so we can create the chrome of the right size.
	(PropertyChanged): pass the atom now, not the name.

	* compzilla/src/compzillaControl.h: change signature for
	PropertyChanged, and add manager window foo.

2007-04-10  Alex Graveley  <alex@beatniksoftware.com>

	* compzilla/src/compzillaWindow.cpp (SendMouseEvent): Adjust
	button+1, since DOM event buttons start at 0;
	(TranslateClientXYToWindow): New.  Adjusts a client x/y for the
	canvas frame's screen offset.  This seems to make button events
	work in the Metacity case, but focus stealing is preventing it
	in the standalone case.

	* compzilla/src/compzillaControl.cpp: Add commented out XEVIE
	stuff.  
	(Filter): Handle MapRequest and ConfigureRequest by just calling
	XMapRaised and XMoveResizeWindow respectively; eventually this
	should call the JS and allow for stopping/mutating the event.
	(InitWindowState): XSelectInput on the root win for
	SubstructureRedirectMask, and if errors occur (i.e. a WM is
	running), try again without it.

	* compzilla/src/compzillaControl.h: Keep an XError count, and add
	ClearError which returns the last count.  This is used to detect
	an existing WM.

	* compzilla/src/compzillaWindow.cpp: New.  Replaces
	CompositingWindow with an nsIDOMEventHandler subclass.

	* compzilla/src/compzillaModule.cpp: Use
	NS_GENERIC_FACTORY_CONSTRUCTOR(compzillaRenderingContext).

	* compzilla/src/compzillaRenderingContext.cpp: Drop
	CZ_NewRenderingContext.  Fix some whitespace.

