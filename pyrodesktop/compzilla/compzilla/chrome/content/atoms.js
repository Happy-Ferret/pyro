/* -*- mode: javascript; c-basic-offset: 4; indent-tabs-mode: t; -*- */


Atoms = {
    svc: null,
    cache : new Object (),

    _intern : function (atom_name) {
        if (this.svc == null) {
            this.svc = Components.classes['@pyrodesktop.org/compzillaService'].getService(
		Components.interfaces.compzillaIControl);
        }

        if (this.cache[atom_name] == null)
            this.cache[atom_name] = this.svc.InternAtom (atom_name);

        return this.cache[atom_name];
    },

    /* constant atoms */
    get XA_PRIMARY () { return 1; },
    get XA_SECONDARY () { return 2; },
    get XA_ARC () { return 3; },
    get XA_ATOM () { return 4; },
    get XA_BITMAP () { return 5; },
    get XA_CARDINAL () { return 6; },
    get XA_COLORMAP () { return 7; },
    get XA_CURSOR () { return 8; },
    get XA_CUT_BUFFER0 () { return 9; },
    get XA_CUT_BUFFER1 () { return 10; },
    get XA_CUT_BUFFER2 () { return 11; },
    get XA_CUT_BUFFER3 () { return 12; },
    get XA_CUT_BUFFER4 () { return 13; },
    get XA_CUT_BUFFER5 () { return 14; },
    get XA_CUT_BUFFER6 () { return 15; },
    get XA_CUT_BUFFER7 () { return 16; },
    get XA_DRAWABLE () { return 17; },
    get XA_FONT () { return 18; },
    get XA_INTEGER () { return 19; },
    get XA_PIXMAP () { return 20; },
    get XA_POINT () { return 21; },
    get XA_RECTANGLE () { return 22; },
    get XA_RESOURCE_MANAGER () { return 23; },
    get XA_RGB_COLOR_MAP () { return 24; },
    get XA_RGB_BEST_MAP () { return 25; },
    get XA_RGB_BLUE_MAP () { return 26; },
    get XA_RGB_DEFAULT_MAP () { return 27; },
    get XA_RGB_GRAY_MAP () { return 28; },
    get XA_RGB_GREEN_MAP () { return 29; },
    get XA_RGB_RED_MAP () { return 30; },
    get XA_STRING () { return 31; },
    get XA_VISUALID () { return 32; },
    get XA_WINDOW () { return 33; },
    get XA_WM_COMMAND () { return 34; },
    get XA_WM_HINTS () { return 35; },
    get XA_WM_CLIENT_MACHINE () { return 36; },
    get XA_WM_ICON_NAME () { return 37; },
    get XA_WM_ICON_SIZE () { return 38; },
    get XA_WM_NAME () { return 39; },
    get XA_WM_NORMAL_HINTS () { return 40; },
    get XA_WM_SIZE_HINTS () { return 41; },
    get XA_WM_ZOOM_HINTS () { return 42; },
    get XA_MIN_SPACE () { return 43; },
    get XA_NORM_SPACE () { return 44; },
    get XA_MAX_SPACE () { return 45; },
    get XA_END_SPACE () { return 46; },
    get XA_SUPERSCRIPT_X () { return 47; },
    get XA_SUPERSCRIPT_Y () { return 48; },
    get XA_SUBSCRIPT_X () { return 49; },
    get XA_SUBSCRIPT_Y () { return 50; },
    get XA_UNDERLINE_POSITION () { return 51; },
    get XA_UNDERLINE_THICKNESS () { return 52; },
    get XA_STRIKEOUT_ASCENT () { return 53; },
    get XA_STRIKEOUT_DESCENT () { return 54; },
    get XA_ITALIC_ANGLE () { return 55; },
    get XA_X_HEIGHT () { return 56; },
    get XA_QUAD_WIDTH () { return 57; },
    get XA_WEIGHT () { return 58; },
    get XA_POINT_SIZE () { return 59; },
    get XA_RESOLUTION () { return 60; },
    get XA_COPYRIGHT () { return 61; },
    get XA_NOTICE () { return 62; },
    get XA_FONT_NAME () { return 63; },
    get XA_FAMILY_NAME () { return 64; },
    get XA_FULL_NAME () { return 65; },
    get XA_CAP_HEIGHT () { return 66; },
    get XA_WM_CLASS () { return 67; },
    get XA_WM_TRANSIENT_FOR () { return 68; },

    get _NET_ACTIVE_WINDOW () { return this._intern ("_NET_ACTIVE_WINDOW"); },
    get _NET_CLIENT_LIST () { return this._intern ("_NET_CLIENT_LIST"); },
    get _NET_CLIENT_LIST_STACKING () { return this._intern ("_NET_CLIENT_LIST_STACKING"); },
    get _NET_CLIENT_LIST_STACKING () { return this._intern ("_NET_CLIENT_LIST_STACKING"); },
    get _NET_CLOSE_WINDOW () { return this._intern ("_NET_CLOSE_WINDOW"); },
    get _NET_CURRENT_DESKTOP () { return this._intern ("_NET_CURRENT_DESKTOP"); },
    get _NET_DESKTOP_GEOMETRY () { return this._intern ("_NET_DESKTOP_GEOMETRY"); },
    get _NET_DESKTOP_LAYOUT () { return this._intern ("_NET_DESKTOP_LAYOUT"); },
    get _NET_DESKTOP_NAMES () { return this._intern ("_NET_DESKTOP_NAMES"); },
    get _NET_DESKTOP_VIEWPORT () { return this._intern ("_NET_DESKTOP_VIEWPORT"); },
    get _NET_FRAME_EXTENTS () { return this._intern ("_NET_FRAME_EXTENTS"); },
    get _NET_NUMBER_OF_DESKTOPS () { return this._intern ("_NET_NUMBER_OF_DESKTOPS"); },
    get _NET_REQUEST_FRAME_EXTENTS () { return this._intern ("_NET_REQUEST_FRAME_EXTENTS"); },
    get _NET_SHOWING_DESKTOP () { return this._intern ("_NET_SHOWING_DESKTOP"); },
    get _NET_STARTUP_ID () { return this._intern ("_NET_STARTUP_ID"); },
    get _NET_SUPPORTED () { return this._intern ("_NET_SUPPORTED"); },
    get _NET_WM_ACTION_CHANGE_DESKTOP () { return this._intern ("_NET_WM_ACTION_CHANGE_DESKTOP"); },
    get _NET_WM_ACTION_CLOSE () { return this._intern ("_NET_WM_ACTION_CLOSE"); },
    get _NET_WM_ACTION_FULLSCREEN () { return this._intern ("_NET_WM_ACTION_FULLSCREEN"); },
    get _NET_WM_ACTION_MAXIMIZE_HORZ () { return this._intern ("_NET_WM_ACTION_MAXIMIZE_HORZ"); },
    get _NET_WM_ACTION_MAXIMIZE_VERT () { return this._intern ("_NET_WM_ACTION_MAXIMIZE_VERT"); },
    get _NET_WM_ACTION_MINIMIZE () { return this._intern ("_NET_WM_ACTION_MINIMIZE"); },
    get _NET_WM_ACTION_MOVE () { return this._intern ("_NET_WM_ACTION_MOVE"); },
    get _NET_WM_ACTION_RESIZE () { return this._intern ("_NET_WM_ACTION_RESIZE"); },
    get _NET_WM_ACTION_SHADE () { return this._intern ("_NET_WM_ACTION_SHADE"); },
    get _NET_WM_ACTION_STICK () { return this._intern ("_NET_WM_ACTION_STICK"); },
    get _NET_WM_ALLOWED_ACTIONS () { return this._intern ("_NET_WM_ALLOWED_ACTIONS"); },
    get _NET_WM_DESKTOP () { return this._intern ("_NET_WM_DESKTOP"); },
    get _NET_WM_ICON_GEOMETRY () { return this._intern ("_NET_WM_ICON_GEOMETRY"); },
    get _NET_WM_ICON_NAME () { return this._intern ("_NET_WM_ICON_NAME"); },
    get _NET_WM_ICON () { return this._intern ("_NET_WM_ICON"); },
    get _NET_WM_MOVERESIZE () { return this._intern ("_NET_WM_MOVERESIZE"); },
    get _NET_WM_NAME () { return this._intern ("_NET_WM_NAME"); },
    get _NET_WM_PID () { return this._intern ("_NET_WM_PID"); },
    get _NET_WM_PING () { return this._intern ("_NET_WM_PING"); },
    get _NET_WM_STATE_ABOVE () { return this._intern ("_NET_WM_STATE_ABOVE"); },
    get _NET_WM_STATE_BELOW () { return this._intern ("_NET_WM_STATE_BELOW"); },
    get _NET_WM_STATE_DEMANDS_ATTENTION () { return this._intern ("_NET_WM_STATE_DEMANDS_ATTENTION"); },
    get _NET_WM_STATE_FULLSCREEN () { return this._intern ("_NET_WM_STATE_FULLSCREEN"); },
    get _NET_WM_STATE_HIDDEN () { return this._intern ("_NET_WM_STATE_HIDDEN"); },
    get _NET_WM_STATE_MAXIMIZED_HORZ () { return this._intern ("_NET_WM_STATE_MAXIMIZED_HORZ"); },
    get _NET_WM_STATE_MAXIMIZED_VERT () { return this._intern ("_NET_WM_STATE_MAXIMIZED_VERT"); },
    get _NET_WM_STATE_MODAL () { return this._intern ("_NET_WM_STATE_MODAL"); },
    get _NET_WM_STATE () { return this._intern ("_NET_WM_STATE"); },
    get _NET_WM_STATE_SHADED () { return this._intern ("_NET_WM_STATE_SHADED"); },
    get _NET_WM_STATE_SKIP_PAGER () { return this._intern ("_NET_WM_STATE_SKIP_PAGER"); },
    get _NET_WM_STATE_SKIP_TASKBAR () { return this._intern ("_NET_WM_STATE_SKIP_TASKBAR"); },
    get _NET_WM_STRUT_PARTIAL () { return this._intern ("_NET_WM_STRUT_PARTIAL"); },
    get _NET_WM_STRUT () { return this._intern ("_NET_WM_STRUT"); },
    get _NET_WM_USER_TIME () { return this._intern ("_NET_WM_USER_TIME"); },
    get _NET_WM_WINDOW_TYPE_DESKTOP () { return this._intern ("_NET_WM_WINDOW_TYPE_DESKTOP"); },
    get _NET_WM_WINDOW_TYPE_DIALOG () { return this._intern ("_NET_WM_WINDOW_TYPE_DIALOG"); },
    get _NET_WM_WINDOW_TYPE_DOCK () { return this._intern ("_NET_WM_WINDOW_TYPE_DOCK"); },
    get _NET_WM_WINDOW_TYPE_MENU () { return this._intern ("_NET_WM_WINDOW_TYPE_MENU"); },
    get _NET_WM_WINDOW_TYPE_NORMAL () { return this._intern ("_NET_WM_WINDOW_TYPE_NORMAL"); },
    get _NET_WM_WINDOW_TYPE () { return this._intern ("_NET_WM_WINDOW_TYPE"); },
    get _NET_WM_WINDOW_TYPE_SPLASH () { return this._intern ("_NET_WM_WINDOW_TYPE_SPLASH"); },
    get _NET_WM_WINDOW_TYPE_TOOLBAR () { return this._intern ("_NET_WM_WINDOW_TYPE_TOOLBAR"); },
    get _NET_WM_WINDOW_TYPE_UTILITY () { return this._intern ("_NET_WM_WINDOW_TYPE_UTILITY"); },
    get _NET_WORKAREA () { return this._intern ("_NET_WORKAREA"); },
}
